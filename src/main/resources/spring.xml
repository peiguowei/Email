<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 自动扫描 指定标签管理目录-->
    <context:component-scan base-package="com.demo.email" />
    <!--配置jdbc连接池对象-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <!--加载驱动-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <!--连接数据库子库-->
        <property name="url" value="jdbc:mysql://localhost:3306/demoone" />
        <!--数据库用户名-->
        <property name="username" value="root" />
        <!--数据库密码-->
        <property name="password" value="123456" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="20"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="20"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="1"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="6000"></property>
    </bean>
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 创建连接工厂对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--关联数据库-->
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 classpath相当于resource-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--关联接口 接口的包-->
        <property name="basePackage" value="com.demo.email.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!-- 事务管理，@Transactional("tmBss") -->
    <bean id="tmBss" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
        <qualifier type="org.springframework.beans.factory.annotation.Qualifier" value="tmBss"/>
    </bean>
    <!-- 使用annotation定义数据库事务，这样可以在类或方法中直接使用@Transactional注解来声明事务 -->
    <tx:annotation-driven transaction-manager="tmBss" proxy-target-class="true"/>

</beans>